<strong><%= link_to "Back", "/solutions/#{solution_id}", class: "nolink" %></strong>

<br></br>

<div class="mainbox">
<%= form_with model: solution_coverage do |form| %>
  <div>
    <strong><%= form.label :engineer_id %><br></strong>

    <%# Manually configuring the @engineers variable in case it is nil.  The controller sets this 
        correctly when we first enter the new coverable object.  However, if we fail (user enters 
        blank), the create method in the controller  calls a render "new" command.  Perhaps this 
        just calls the new.html.erb file for the coverable object, and doesn't hit the new method
        on the controller again.  Not really sure.  REVISIT joke %>

    <% @solution = Solution.find(params[:solution_id]) %>
    <% @engineers||= Engineer.all - @solution.engineers %>

    <%= form.select :engineer_id, @engineers.collect{ |p| [p.first_name, p.id ]}, include_blank: true %>
    <% solution_coverage.errors.full_messages_for(:engineer_id).each do |message| %>
      <div><%= message %></div>
    <% end %>
  </div>
  <br>

  <div>
    <%= form.hidden_field :solution_id, value: solution_id %>
  </div>

  <div>
    <strong><%= form.label :status %><br></strong>
    <%= form.select :status, ['public', 'private', 'archived'], selected: 'public' %>
  </div>
  <br>

  <div>
    <%= form.submit class: "form-submit-button" %>
  </div>
<% end %>
</div>
